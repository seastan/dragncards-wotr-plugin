{
    "functions": {
        "LOAD_RULES": {
            "args": ["$PRODUCT_ID"],
            "code": ["COND",
                ["EQUAL", "$PRODUCT_ID", "Core"],
                [
                    ["LOAD_CARDS", "Core-Rulebook"]
                ],
                ["EQUAL", "$PRODUCT_ID", "AtS"],
                [
                    ["LOAD_CARDS", "AtS-Rulebook"]
                ],
                ["EQUAL", "$PRODUCT_ID", "FaS"],
                [
                    ["LOAD_CARDS", "FaS-Rulebook"]
                ],
		        ["EQUAL", "$PRODUCT_ID", "GpS"],
                [
                    ["LOAD_CARDS", "GpS-Rulebook"]
                ],
                ["EQUAL", "$PRODUCT_ID", "Test"],
                [
                    ["LOAD_CARDS", "Test-Rulebook"]
                ],
                ["TRUE"],
                [
                    ["LOG", "Product {{$PRODUCT_ID}} not found."]
                ]
            ]
        },
        "SET_NUM_PLAYERS": {
            "args": ["$NUM_PLAYERS"],
            "code": [
                ["LOG", "{{$ALIAS_N}} set the number of players to {{$NUM_PLAYERS}}."],
                ["SET", "/numPlayers", "$NUM_PLAYERS"],
                ["COND",
                    ["EQUAL", "$NUM_PLAYERS", 6],
                    [
                        ["SET_NUM_BLUE_RED", 3, 3],
                        ["PROMPT", "$PLAYER_ORDER", "notifyAll", "To show/hide the location decks in 6 player mode, use the L key."]
                    ],
                    ["EQUAL", "$NUM_PLAYERS", 3],
                    [
                        ["SET_NUM_BLUE_RED", 1, 2]
                    ],
                    ["EQUAL", "$NUM_PLAYERS", 4],
                    [
                        ["SET_NUM_BLUE_RED", 2, 2]
                    ],
                    ["EQUAL", "$NUM_PLAYERS", 2],
                    [
                        ["SET_NUM_BLUE_RED", 1, 1]
                    ],
                    ["EQUAL", "$NUM_PLAYERS", 1],
                    [
                        ["SET_NUM_BLUE_RED", 1, 1]
                    ],
                    ["TRUE"],
                    [
                        ["LOG", "Invalid number of players."]
                    ]
                ],
                ["HIGHLIGHT_CURRENT_PLAYER"]
            ]
        },
        "SET_PLAYERS_PROPS": {
            "args": ["$PROP_NAME", "$VAL_LIST"],
            "code": [
                ["FOR_EACH_START_STOP_STEP", "$I", 0, "$GAME.numPlayers", 1, [
                    ["VAR", "$VAL", "$VAL_LIST.[{{$I}}]"],
                    ["VAR", "$PLAYER_NUM", ["ADD", "$I", 1]],
                    ["VAR", "$PLAYER_I", "player{{$PLAYER_NUM}}"],
                    ["SET", "/playerData/$PLAYER_I/$PROP_NAME", "$VAL"]
                ]]
            ]
        },
        "SET_PLAYER_NAMES": {
            "args": ["$NAME_LIST"],
            "code": ["SET_PLAYERS_PROPS", "label", "$NAME_LIST"]
        },
        "LOAD_PLAYER_DECKS": {
            "args": ["$DECK_IDS"],
            "code": [
                ["FOR_EACH_START_STOP_STEP", "$I", 0, "$GAME.numPlayers", 1, [
                    ["VAR", "$DECK_ID", "$DECK_IDS.[{{$I}}]"],  
                    ["VAR", "$PLAYER_NUM", ["ADD", "$I", 1]],
                    ["VAR", "$PLAYER_N", "player{{$PLAYER_NUM}}"],
                    ["LOAD_CARDS", "$DECK_ID"]
                ]]
            ]
        },
        "MOVE_TO_SCORING": {
            "args": ["$CARD", "$WINNING_TEAM"],
            "code": [
                ["COND",
                    ["AND", ["EQUAL", "$WINNING_TEAM", "blue"], ["EQUAL", "$CARD.currentFace.type", "Battleground"]],
                    [
                        ["LOG", "$ALIAS_N", " scored ", "$CARD.currentFace.name", " for the Free Peoples Player(s) team."],
                        ["MOVE_CARD", "$CARD.id", "sharedScoringBlue", 0]
                    ],
                    ["AND", ["EQUAL", "$WINNING_TEAM", "red"], ["EQUAL", "$CARD.currentFace.type", "Battleground"]],
                    [
                        ["LOG", "$ALIAS_N", " scored ", "$CARD.currentFace.name", " for the Shadow Player(s) team."],
                        ["MOVE_CARD", "$CARD.id", "sharedScoringRed", 0]
                    ],
                    ["AND", ["EQUAL", "$WINNING_TEAM", "blue"], ["EQUAL", "$CARD.currentFace.type", "Path"]],
                    [
                        ["LOG", "$ALIAS_N", " scored ", "$CARD.currentFace.name", " for the Free Peoples Player(s) team."],
                        ["MOVE_CARD", "$CARD.id", "sharedScoringBlue", 0]
                    ],
                    ["AND", ["EQUAL", "$WINNING_TEAM", "red"], ["EQUAL", "$CARD.currentFace.type", "Path"]],
                    [
                        ["LOG", "$ALIAS_N", " scored ", "$CARD.currentFace.name", " for the Shadow Player(s) team."],
                        ["MOVE_CARD", "$CARD.id", "sharedScoringRed", 0]
                    ],
                    ["AND", ["EQUAL", "$WINNING_TEAM", "blue"], ["EQUAL", "$CARD.currentFace.type", "Skirmish"]],
                    [
                        ["COND", ["EQUAL", "$GAME.nullTieOnSkirmish", true],
                            [
                                ["LOG", "$ALIAS_N", " resolved the ", "$CARD.currentFace.name", " skirmish. Neither team won. Returning it to Free Peoples battleground deck."],
                                ["MOVE_CARD", "$CARD.id", "sharedBattlegroundBlue", 0],
                                ["SHUFFLE_GROUP", "sharedBattlegroundBlue"]
                                
                            ]
                        ],
                        ["COND", ["EQUAL", "$GAME.nullTieOnSkirmish", false],
                            [
                                ["LOG", "$ALIAS_N", " resolved the ", "$CARD.currentFace.name", " skirmish. The Free Peoples Player(s) team won. Setting it aside."],
                                ["MOVE_CARD", "$CARD.id", "sharedAside", 0]
                            ]
                        ]
                    ],
                    ["AND", ["EQUAL", "$WINNING_TEAM", "red"], ["EQUAL", "$CARD.currentFace.type", "Skirmish"]],
                    [
                        ["COND", ["EQUAL", "$GAME.nullTieOnSkirmish", true],
                            [
                                ["LOG", "$ALIAS_N", " resolved the ", "$CARD.currentFace.name", " skirmish. Neither team won. Returning it to Shadow battleground deck."],
                                ["MOVE_CARD", "$CARD.id", "sharedBattlegroundRed", 0],
                                ["SHUFFLE_GROUP", "sharedBattlegroundRed"]
                            ]
                        ],
                        ["COND", ["EQUAL", "$GAME.nullTieOnSkirmish", false],
                            [
                                ["LOG", "$ALIAS_N", " resolved the ", "$CARD.currentFace.name", " skirmish. The Shadow Player(s) team won. Setting it aside."],
                                ["MOVE_CARD", "$CARD.id", "sharedAside", 0]
                            ]
                        ]
                    ]
                ]
            ]
        },
        "LOAD_DECK_FOR_PLAYER": {
            "args": ["$PLAYER_I", "$DECK_ID"],
            "code": [
                ["VAR", "$PLAYER_N", "$PLAYER_I"],
                ["LOG", "{{$ALIAS_N}} loaded their deck."],
                ["LOAD_CARDS", "$DECK_ID"]
            ]
        },
        "SET_TURN_ORDER": {
            "args": ["$TURN_ORDER_LIST"],
            "code": ["SET", "/turnOrder", "$TURN_ORDER_LIST"]
        },
        "SET_SETUP_DRAW": {
            "args": ["$VAL_LIST"],
            "code": ["SET_PLAYERS_PROPS", "setupDraw", "$VAL_LIST"]
        },
        "SET_ROUND_DRAW": {
            "args": ["$VAL_LIST"],
            "code": ["SET_PLAYERS_PROPS", "roundDraw", "$VAL_LIST"]
        },
        "SET_SETUP_RINGS": {
            "args": ["$VAL_LIST"],
            "code": ["SET_PLAYERS_PROPS", "ringTokens", "$VAL_LIST"]
        },
        "SET_ROUND_RINGS": {
            "args": ["$VAL_LIST"],
            "code": ["SET_PLAYERS_PROPS", "roundRings", "$VAL_LIST"]
        },
        "SHUFFLE_BATTLEGROUNDS": {
            "args": ["$BOOL"],
            "code": [
                ["COND",
                    "$BOOL",
                    [
                        ["LOG", "Shuffled battlegrounds."],
                        ["SHUFFLE_GROUP", "sharedBattlegroundBlue"],
                        ["SHUFFLE_GROUP", "sharedBattlegroundRed"]
                    ]
                ]
            ]
        },
        "SHUFFLE_PATHS": {
            "args": ["$BOOL"],
            "code": [
                ["COND",
                    "$BOOL",
                    ["COND",
                        ["EQUAL", "$GAME.EDM", false],
                        [
                            ["LOG", "Shuffled paths."],
                            ["SHUFFLE_GROUP", "sharedPathDeck1"],
                            ["SHUFFLE_GROUP", "sharedPathDeck2"],
                            ["SHUFFLE_GROUP", "sharedPathDeck3"],
                            ["SHUFFLE_GROUP", "sharedPathDeck4"],
                            ["SHUFFLE_GROUP", "sharedPathDeck5"],
                            ["SHUFFLE_GROUP", "sharedPathDeck6"],
                            ["SHUFFLE_GROUP", "sharedPathDeck7"],
                            ["SHUFFLE_GROUP", "sharedPathDeck8"],
                            ["SHUFFLE_GROUP", "sharedPathDeck9"]
                        ],
                        ["EQUAL", "$GAME.EDM", true],
                        [
                            ["LOG", "Shuffled paths."],
                            ["SHUFFLE_GROUP", "sharedPathDeck1A"],
                            ["SHUFFLE_GROUP", "sharedPathDeck2A"],
                            ["SHUFFLE_GROUP", "sharedPathDeck3A"],
                            ["SHUFFLE_GROUP", "sharedPathDeck4A"],
                            ["SHUFFLE_GROUP", "sharedPathDeck5A"],
                            ["SHUFFLE_GROUP", "sharedPathDeck6A"],
                            ["SHUFFLE_GROUP", "sharedPathDeck7A"],
                            ["SHUFFLE_GROUP", "sharedPathDeck8A"],
                            ["SHUFFLE_GROUP", "sharedPathDeck9A"],
                            ["SHUFFLE_GROUP", "sharedPathDeck1B"],
                            ["SHUFFLE_GROUP", "sharedPathDeck2B"],
                            ["SHUFFLE_GROUP", "sharedPathDeck3B"],
                            ["SHUFFLE_GROUP", "sharedPathDeck4B"],
                            ["SHUFFLE_GROUP", "sharedPathDeck5B"],
                            ["SHUFFLE_GROUP", "sharedPathDeck6B"],
                            ["SHUFFLE_GROUP", "sharedPathDeck7B"],
                            ["SHUFFLE_GROUP", "sharedPathDeck8B"],
                            ["SHUFFLE_GROUP", "sharedPathDeck9B"]
                        ]
                    ]
                ]
            ]
        },
        "SET_PLAYEST_SCENARIO": {
            "args": ["$BOOL"],
            "code": [
                ["SET", "/playtestScenario", "$BOOL"],
                ["COND",
                    "$BOOL",
                    [
                        ["PROMPT", "$PLAYER_ORDER", "notifyAll", "This is a playtesting scenario. You can find the rules in the sharedAside pile."]
                    ]
                ]
            ]
        },
        "SET_NO_POINTS_AWARDED_ON_PATH_TIES": {
            "args": ["$BOOL"],
            "code": [
                ["SET", "/noPointsAwardedOnPathTies", "$BOOL"],
                ["COND",
                    "$BOOL",
                    [
                        ["PROMPT", "$PLAYER_ORDER", "notifyAll", "The 'No Points Awarded on Path Ties' rule is in effect. If a path combat is tied, no points will be awarded to either side. Scored paths that are tied will be set aside and will not be moved to any scoring area."]
                    ]
                ]
            ]
        },
        "SET_CORRUPTION_BONUS": {
            "args": ["$BOOL"],
            "code": [
                ["SET", "/corruptionBonus", "$BOOL"],
                ["COND",
                    "$BOOL",
                    [
                        ["PROMPT", "$PLAYER_ORDER", "notifyAll", "The 'Corruption Bonus' rule is in effect. Each time a Free Peoples battleground (not a skirmish!) is moved to the Shadow scoring area while scoring, the corruption counter will increase by 1."]
                    ]
                ]
            ]
        },
        "SET_CORRUPTION_BONUS_DOUBLE": {
            "args": ["$BOOL"],
            "code": [
                ["SET", "/corruptionBonusDouble", "$BOOL"],
                ["COND",
                    "$BOOL",
                    [
                        ["PROMPT", "$PLAYER_ORDER", "notifyAll", "The 'Corruption Bonus' rule is in effect. Each time a Free Peoples battleground (not a skirmish) is moved to the Shadow scoring area while scoring, the corruption counter will increase by 1. Each time a Shadow battleground (not a skirmish) is moved to the Free Peoples scoring area while scoring, the corruption counter will decrease by 1 (minimum 0)."]
                    ]
                ]
            ]
        },
        "SET_EPIC_REMINDER": {
            "args": ["$BOOL"],
            "code": [
                ["COND",
                    "$BOOL",
                    [
                        ["PROMPT", "$PLAYER_ORDER", "notifyAll", "When required, you can load your Section 3 Faction cards and/or the Section 2 and 3 battlegrounds from Menu->Load->Load prebuilt deck->Fire and Swords/F&S-Solo/Coop->Epic Duel."]
                    ]
                ]
            ]
        },
        "RESOLVE_CORRUPTION_BONUS_SHADOW": {
            "args": [],
            "code": ["COND", 
                ["OR",
                    ["EQUAL", "$GAME.corruptionBonus", true],
                    ["EQUAL", "$GAME.corruptionBonusDouble", true]
                ],
                [
                    ["LOG", "$ALIAS_N", " added 1 to the corruption score due to the corruption bonus rule."],
                    ["INCREASE_VAL", "/corruptionScore", 1]
                ]
            ]
        },
        "RESOLVE_CORRUPTION_BONUS_FREE": {
        "args": [],
        "code": ["COND",
            "$GAME.corruptionBonusDouble",
            [
                ["COND",
                    ["EQUAL", "$GAME.corruptionScore", 0],
                        ["LOG", "No corruption available to remove, the benefit is ignored."],
                    ["GREATER_THAN", "$GAME.corruptionScore", 0],
                    [
                        ["LOG", "$ALIAS_N", " removed 1 from the corruption score due to the corruption bonus rule."],
                        ["DECREASE_VAL", "/corruptionScore", 1]
                    ]
                ]
            ]
            ]
        },
        "SET_INITIAL_CORRUPTION": {
            "args": ["$CORRUPTION_BONUS"],
            "code": [
                ["SET", "/corruptionScore", "$CORRUPTION_BONUS"]
            ]
        },
        "LOAD_PROMOS": {
            "args": ["$PROMO_IDS"],
            "code": [
                ["FOR_EACH_VAL", "$PROMO_ID", "$PROMO_IDS", [
                    ["LOAD_CARDS", ["LIST", ["PROCESS_MAP", {"databaseId": "$PROMO_ID", "loadGroupId": "sharedAside", "quantity": 1}]]]
                ]]
            ]
        },
        "SET_NUM_BLUE_RED": {
            "args": ["$NUM_BLUE", "$NUM_RED"],
            "code": [
                ["SET_NUM_BLUE", "$NUM_BLUE"],
                ["SET_NUM_RED", "$NUM_RED"]
            ]
        },
        "SET_NUM_BLUE": {
            "args": ["$NUM_BLUE"],
            "code": [
                ["LOG", "{{$ALIAS_N}} set the number of Free Peoples players to {{$NUM_BLUE}}."],
                ["SET", "/numBlue", "$NUM_BLUE"],
                ["COND", 
                    ["EQUAL", "$NUM_BLUE", 2],
                    [
                        ["SET", "/playerData/player1/team", "blue"],
                        ["SET", "/playerData/player3/team", "blue"],
                        ["UPDATE_LAYOUT", "/layout/regions/player3Reserve/visible", true],
                        ["UPDATE_LAYOUT", "/layout/regions/player1Reserve/width", "32%"],
                        ["UPDATE_LAYOUT", "/layout/regions/sharedBattlegroundBlue/left", "32%"],
                        ["UPDATE_LAYOUT", "/layout/regions/sharedPathDeck/left", "44%"],

                        ["UPDATE_LAYOUT", "/layout/regions/player3Hand/visible", true],
                        ["UPDATE_LAYOUT", "/layout/regions/player3Deck/visible", true],
                        ["UPDATE_LAYOUT", "/layout/regions/player3Cycled/visible", true],
                        ["UPDATE_LAYOUT", "/layout/regions/player3Eliminated/visible", true],
                        ["UPDATE_LAYOUT", "/layout/regions/player1Hand/width", "23%"],
                        ["UPDATE_LAYOUT", "/layout/regions/player1Deck/left", "23%"],
                        ["UPDATE_LAYOUT", "/layout/regions/player1Cycled/left", "30%"],
                        ["UPDATE_LAYOUT", "/layout/regions/player1Eliminated/left", "37%"],
                        
                        ["COND",
                            ["EQUAL", "$GAME.EDM", false],
                            [
                                ["FOR_EACH_START_STOP_STEP", "$I", 1, 10, 1, [
                                    ["VAR", "$LEFT", ["CALC", "0.415+{{$I}}*0.015"]],
                                    ["UPDATE_LAYOUT", "/layout/tableButtons/layoutPath{{$I}}/left", "$LEFT"]]
                                ]
                            ],
                            ["EQUAL", "$GAME.EDM", true],
                            [
                                ["FOR_EACH_START_STOP_STEP", "$I", 1, 10, 1, [
                                    ["VAR", "$LEFT", ["CALC", "0.415+{{$I}}*0.015"]],
                                    ["UPDATE_LAYOUT", "/layout/tableButtons/layoutPath{{$I}}A/left", "$LEFT"],
                                    ["UPDATE_LAYOUT", "/layout/tableButtons/layoutPath{{$I}}B/left", "$LEFT"]]
                                ]
                            ]
                        ]
                    ],
                    ["EQUAL", "$NUM_BLUE", 1],
                    [
                        ["SET", "/playerData/player1/team", "blue"],
                        ["UPDATE_LAYOUT", "/layout/regions/player3Reserve/visible", false],
                        ["UPDATE_LAYOUT", "/layout/regions/player1Reserve/width", "64%"],
                        ["UPDATE_LAYOUT", "/layout/regions/sharedBattlegroundBlue/left", "64%"],
                        ["UPDATE_LAYOUT", "/layout/regions/sharedPathDeck/left", "76%"],

                        ["UPDATE_LAYOUT", "/layout/regions/player3Hand/visible", false],
                        ["UPDATE_LAYOUT", "/layout/regions/player3Deck/visible", false],
                        ["UPDATE_LAYOUT", "/layout/regions/player3Cycled/visible", false],
                        ["UPDATE_LAYOUT", "/layout/regions/player3Eliminated/visible", false],
                        ["UPDATE_LAYOUT", "/layout/regions/player1Hand/width", "67%"],
                        ["UPDATE_LAYOUT", "/layout/regions/player1Deck/left", "67%"],
                        ["UPDATE_LAYOUT", "/layout/regions/player1Cycled/left", "74%"],
                        ["UPDATE_LAYOUT", "/layout/regions/player1Eliminated/left", "81%"],

                        ["COND",
                            ["EQUAL", "$GAME.EDM", false],
                            [
                                ["FOR_EACH_START_STOP_STEP", "$I", 1, 10, 1, [
                                    ["VAR", "$LEFT", ["CALC", "0.73+{{$I}}*0.015"]],
                                    ["UPDATE_LAYOUT", "/layout/tableButtons/layoutPath{{$I}}/left", "$LEFT"]]
                                ]
                            ],
                            ["EQUAL", "$GAME.EDM", true],
                            [
                                ["FOR_EACH_START_STOP_STEP", "$I", 1, 10, 1, [
                                    ["VAR", "$LEFT", ["CALC", "0.73+{{$I}}*0.015"]],
                                    ["UPDATE_LAYOUT", "/layout/tableButtons/layoutPath{{$I}}A/left", "$LEFT"],
                                    ["UPDATE_LAYOUT", "/layout/tableButtons/layoutPath{{$I}}B/left", "$LEFT"]]
                                ]
                            ]
                        ]
                    ]
                ]
            ]
        },
        "SET_NUM_RED": {
            "args": ["$NUM_RED"],
            "code": [
                ["LOG", "{{$ALIAS_N}} set the number of Shadow players to {{$NUM_RED}}."],
                ["SET", "/numRed", "$NUM_RED"],
                ["COND", 
                    ["EQUAL", "$NUM_RED", 2],
                    [
                        ["SET", "/playerData/player2/team", "red"],
                        ["SET", "/playerData/player4/team", "red"],
                        ["UPDATE_LAYOUT", "/layout/regions/player4Reserve/visible", true],
                        ["UPDATE_LAYOUT", "/layout/regions/player2Reserve/width", "38%"],
                        ["UPDATE_LAYOUT", "/layout/regions/sharedBattlegroundRed/left", "38%"],

                        ["UPDATE_LAYOUT", "/layout/regions/player4Hand/visible", true],
                        ["UPDATE_LAYOUT", "/layout/regions/player4Deck/visible", true],
                        ["UPDATE_LAYOUT", "/layout/regions/player4Cycled/visible", true],
                        ["UPDATE_LAYOUT", "/layout/regions/player4Eliminated/visible", true],
                        ["UPDATE_LAYOUT", "/layout/regions/player2Hand/width", "23%"],
                        ["UPDATE_LAYOUT", "/layout/regions/player2Deck/left", "23%"],
                        ["UPDATE_LAYOUT", "/layout/regions/player2Cycled/left", "30%"],
                        ["UPDATE_LAYOUT", "/layout/regions/player2Eliminated/left", "37%"],

                        ["COND",
                            ["EQUAL", "$GAME.numBlue", 1],
                            ["ACTION_LIST", "changeP4ToP3"]
                        ]
                    ],
                    ["EQUAL", "$NUM_RED", 1],
                    [
                        ["SET", "/playerData/player2/team", "red"],
                        ["UPDATE_LAYOUT", "/layout/regions/player4Reserve/visible", false],
                        ["UPDATE_LAYOUT", "/layout/regions/player2Reserve/width", "76%"],
                        ["UPDATE_LAYOUT", "/layout/regions/sharedBattlegroundRed/left", "76%"],

                        ["UPDATE_LAYOUT", "/layout/regions/player4Hand/visible", false],
                        ["UPDATE_LAYOUT", "/layout/regions/player4Deck/visible", false],
                        ["UPDATE_LAYOUT", "/layout/regions/player4Cycled/visible", false],
                        ["UPDATE_LAYOUT", "/layout/regions/player4Eliminated/visible", false],
                        ["UPDATE_LAYOUT", "/layout/regions/player2Hand/width", "67%"],
                        ["UPDATE_LAYOUT", "/layout/regions/player2Deck/left", "67%"],
                        ["UPDATE_LAYOUT", "/layout/regions/player2Cycled/left", "74%"],
                        ["UPDATE_LAYOUT", "/layout/regions/player2Eliminated/left", "81%"]
                    ]
                ]
            ]
        },
        "SET_NUM_LOCATIONS": {
            "args": ["$NUM_LOCATIONS"],
            "code": [
                ["LOG", "{{$ALIAS_N}} set the number of locations to {{$NUM_LOCATIONS}}."],
                ["SET", "/numLocations", "$NUM_LOCATIONS"],
                ["FOR_EACH_START_STOP_STEP", "$I", 1, 7, 1, [
                    ["UPDATE_LAYOUT", "/layout/regions/sharedActiveRed{{$I}}/visible", false],
                    ["UPDATE_LAYOUT", "/layout/regions/sharedActiveBlue{{$I}}/visible", false],
                    ["UPDATE_LAYOUT", "/layout/regions/sharedActiveLocation{{$I}}/visible", false],
                    ["UPDATE_LAYOUT", "/layout/textBoxes/sharedActiveRed{{$I}}/visible", false],
                    ["UPDATE_LAYOUT", "/layout/textBoxes/sharedActiveBlue{{$I}}/visible", false]
                ]],
                ["FOR_EACH_START_STOP_STEP", "$I", 1, ["ADD", "$NUM_LOCATIONS", 1], 1, [
                    ["VAR", "$WIDTH", ["CALC", "0.88/{{$NUM_LOCATIONS}}"]],
                    ["VAR", "$LEFT", ["CALC", "({{$I}}-1)*{{$WIDTH}}"]],
                    ["UPDATE_LAYOUT", "/layout/regions/sharedActiveRed{{$I}}/width", "$WIDTH"],
                    ["UPDATE_LAYOUT", "/layout/regions/sharedActiveBlue{{$I}}/width", "$WIDTH"],
                    ["UPDATE_LAYOUT", "/layout/regions/sharedActiveLocation{{$I}}/width", "$WIDTH"],
                    ["UPDATE_LAYOUT", "/layout/regions/sharedActiveRed{{$I}}/left", "$LEFT"],
                    ["UPDATE_LAYOUT", "/layout/regions/sharedActiveBlue{{$I}}/left", "$LEFT"],
                    ["UPDATE_LAYOUT", "/layout/regions/sharedActiveLocation{{$I}}/left", "$LEFT"],
                    ["UPDATE_LAYOUT", "/layout/regions/sharedActiveRed{{$I}}/visible", true],
                    ["UPDATE_LAYOUT", "/layout/regions/sharedActiveBlue{{$I}}/visible", true],
                    ["UPDATE_LAYOUT", "/layout/regions/sharedActiveLocation{{$I}}/visible", true],

                    ["UPDATE_LAYOUT", "/layout/textBoxes/sharedActiveRed{{$I}}/left", "$LEFT"],
                    ["UPDATE_LAYOUT", "/layout/textBoxes/sharedActiveBlue{{$I}}/left", "$LEFT"],
                    ["UPDATE_LAYOUT", "/layout/textBoxes/sharedActiveRed{{$I}}/visible", true],
                    ["UPDATE_LAYOUT", "/layout/textBoxes/sharedActiveBlue{{$I}}/visible", true]

                ]]
            ]
        },
        "SET_PATH": {
            "args": ["$PATH"],
            "code": [
                ["LOG", "{{$ALIAS_N}} set the path to {{$PATH}}."],
                ["SET", "/pathNum", "$PATH"],
                ["UPDATE_LAYOUT", "/layout/regions/sharedPathDeck/groupId", "sharedPathDeck{{$PATH}}"]
            ]
        },
        "DRAW_CARD_PLAYER_I": {
            "args": ["$PLAYER_I"],
            "code": [
                ["LOG", "{{$ALIAS_N}} made ", ["GET_ALIAS", "$PLAYER_I"], " draw a card."],
                ["DEFINE", "$PLAYER_N", "$PLAYER_I"],
                ["DRAW_CARD"]
            ]
        },
        "SET_HAND_SIZE": {
            "args": ["$PLAYER_I"],
            "code": [
                ["VAR", "$HAND_GROUP_ID", "{{$PLAYER_I}}Hand"],
                ["VAR", "$HAND_SIZE", ["LENGTH", "$GAME.groupById.$HAND_GROUP_ID.stackIds"]],
                ["SET", "/playerData/$PLAYER_I/handSize", "$HAND_SIZE"]
            ]
        },
        "COMPUTE_STRENGTH": {
            "args": ["$PLAY_GROUP_ID"],
            "code": [
                ["VAR", "$PLAY_GROUP", "$GAME.groupById.$PLAY_GROUP_ID"],
                ["VAR", "$LOC_GROUP_ID", "$PLAY_GROUP.onCardEnter.locationGroupId"],
                ["VAR", "$LOC_GROUP", "$GAME.groupById.$LOC_GROUP_ID"],
                ["VAR", "$STAT", "$PLAY_GROUP.combatStat"],
                ["VAR", "$TOKEN", "$PLAY_GROUP.combatToken"],
		        ["VAR", "$BLUE_GROUP_ID", "$LOC_GROUP.activeBlueGroupId"],
                ["UPDATE_LAYOUT", "/layout/textBoxes/$PLAY_GROUP_ID/label", 0],
                ["COND",
                    ["GREATER_THAN", ["LENGTH", "$LOC_GROUP.stackIds"], 0],
                    [
                        ["VAR", "$LOC_CARD", "$LOC_GROUP.parentCards.[0]"],
                        ["FOR_EACH_KEY_VAL", "$CARD_ID", "$CARD", "$CARD_BY_ID",
                            ["COND",
                                ["EQUAL", "$CARD.groupId", "$PLAY_GROUP_ID"],
                                [
                                    ["UPDATE_LAYOUT", "/layout/textBoxes/$PLAY_GROUP_ID/label", ["ADD", "$GAME.layout.textBoxes.$PLAY_GROUP_ID.label", "$CARD.sides.A.$STAT"]],
                                    ["UPDATE_LAYOUT", "/layout/textBoxes/$PLAY_GROUP_ID/label", ["ADD", "$GAME.layout.textBoxes.$PLAY_GROUP_ID.label", "$CARD.tokens.$TOKEN"]]
                                ]
                            ]
                        ],
                        ["COND",
                            ["EQUAL", "$LOC_CARD.sides.A.type", "Battleground"],
                            [
                                ["UPDATE_LAYOUT", "/layout/textBoxes/$PLAY_GROUP_ID/label", ["ADD", "$GAME.layout.textBoxes.$PLAY_GROUP_ID.label", "$LOC_CARD.sides.A.$STAT"]],
                                ["UPDATE_LAYOUT", "/layout/textBoxes/$PLAY_GROUP_ID/label", ["ADD", "$GAME.layout.textBoxes.$PLAY_GROUP_ID.label", "$LOC_CARD.tokens.$TOKEN"]]
                            ]
                        ],
                        ["COND",
                            ["EQUAL", "$LOC_CARD.sides.A.type", "Path"],
                            [
                                ["UPDATE_LAYOUT", "/layout/textBoxes/$PLAY_GROUP_ID/label", ["ADD", "$GAME.layout.textBoxes.$PLAY_GROUP_ID.label", "$LOC_CARD.sides.A.$STAT"]],
                                ["UPDATE_LAYOUT", "/layout/textBoxes/$PLAY_GROUP_ID/label", ["ADD", "$GAME.layout.textBoxes.$PLAY_GROUP_ID.label", "$LOC_CARD.tokens.$TOKEN"]]
                            ]
                        ],
                        ["COND",
                            ["EQUAL", "$LOC_CARD.sides.A.type", "Skirmish"],
                            [
                                ["UPDATE_LAYOUT", "/layout/textBoxes/$PLAY_GROUP_ID/label", ["ADD", "$GAME.layout.textBoxes.$PLAY_GROUP_ID.label", "$LOC_CARD.sides.A.$STAT"]],
                                ["UPDATE_LAYOUT", "/layout/textBoxes/$PLAY_GROUP_ID/label", ["ADD", "$GAME.layout.textBoxes.$PLAY_GROUP_ID.label", "$LOC_CARD.tokens.$TOKEN"]]
                            ]
                        ]
                    ]
                ],
                ["UPDATE_EXPECTED_POINTS"]
            ]
        },
        "COMPUTE_SCORE": {
            "args": [],
            "code": [
                ["SET", "/victoryPointsRed", 0],
                ["SET", "/victoryPointsBlue", 0],
                ["FOR_EACH_KEY_VAL", "$CARD_ID", "$CARD", "$CARD_BY_ID",
                    ["COND",
                        ["EQUAL", "$CARD.groupId", "sharedScoringRed"],
                        [
                            ["INCREASE_VAL", "/victoryPointsRed", "$CARD.currentFace.victoryPoints"],
                            ["INCREASE_VAL", "/victoryPointsRed", "$CARD.tokens.corruption"]
                        ],
                        ["EQUAL", "$CARD.groupId", "sharedScoringBlue"],
                        [
                            ["INCREASE_VAL", "/victoryPointsBlue", "$CARD.currentFace.victoryPoints"]
                        ]
                    ]
                ],
                ["INCREASE_VAL", "/victoryPointsRed", "$GAME.corruptionScore"],
                ["COND",
                    ["GREATER_THAN", "$GAME.victoryPointsRed", "$GAME.victoryPointsBlue"],
                    ["LOG", "└── The Shadow Player(s) are leading {{$GAME.victoryPointsRed}}-{{$GAME.victoryPointsBlue}}."],
                    ["GREATER_THAN", "$GAME.victoryPointsBlue", "$GAME.victoryPointsRed"],
                    ["LOG", "└── The Free Peoples Player(s) are leading {{$GAME.victoryPointsBlue}}-{{$GAME.victoryPointsRed}}."],
                    ["TRUE"],
                    ["LOG", "└── The game is tied {{$GAME.victoryPointsBlue}}-{{$GAME.victoryPointsRed}}."]
                ],
                ["UPDATE_LAYOUT", "/layout/textBoxes/scoreRed/label",  "SP Score: {{$GAME.victoryPointsRed}}"],
                ["UPDATE_LAYOUT", "/layout/textBoxes/scoreBlue/label", "FP Score: {{$GAME.victoryPointsBlue}}"]
            ]
        },
        "GET_LOCATION_WINNER": {
            "args": ["$LOCATION_GROUP_ID"],
            "code": [
                ["VAR", "$BLUE_GROUP_ID", "$GAME.groupById.$LOCATION_GROUP_ID.activeBlueGroupId"],
                ["VAR", "$RED_GROUP_ID", "$GAME.groupById.$LOCATION_GROUP_ID.activeRedGroupId"],
                ["VAR", "$BLUE_TOTAL", "$GAME.layout.textBoxes.$BLUE_GROUP_ID.label"],
                ["VAR", "$RED_TOTAL", "$GAME.layout.textBoxes.$RED_GROUP_ID.label"],
                ["COND",
                    ["GREATER_THAN", "$BLUE_TOTAL", "$RED_TOTAL"],
                    "blue",
                    ["GREATER_THAN", "$RED_TOTAL", "$BLUE_TOTAL"],
                    "red",
                    ["AND",
                        "$GAME.noPointsAwardedOnPathTies",
                        ["EQUAL", "$GAME.groupById.$BLUE_GROUP_ID.combatStat", "buckler"]
                    ],
                    "neither",
                    ["OR",
                        ["EQUAL", "$GAME.groupById.$BLUE_GROUP_ID.combatStat", "defense"],
                        ["EQUAL", "$GAME.groupById.$BLUE_GROUP_ID.combatStat", "buckler"]
                    ],
                    "blue",
                    ["EQUAL", "$GAME.groupById.$RED_GROUP_ID.combatStat", "defense"],
                    "red"
                ]
            ]
        },
        "GET_EXPECTED_POINTS_RED": {
            "args": ["$LOCATION_GROUP_ID"],
            "code": [
                ["VAR", "$WINNER", ["GET_LOCATION_WINNER", "$LOCATION_GROUP_ID"]],
                ["VAR", "$LOCATION_CARD", "$GAME.groupById.$LOCATION_GROUP_ID.parentCards.[0]"],
                ["VAR", "$EXPECTED_POINTS", 0],
                ["COND",
                    ["EQUAL", "$WINNER", "red"],
                    ["COND",
                        ["EQUAL", "$LOCATION_CARD.sides.A.type", "Battleground"],
                        [
                            ["INCREASE_VAR", "$EXPECTED_POINTS", ["ADD", "$LOCATION_CARD.sides.A.victoryPoints", "$LOCATION_CARD.tokens.corruption"]],
                            ["COND",
                                ["AND",
                                    ["EQUAL", "$LOCATION_CARD.sides.B.name", "Free Peoples Battleground"],
                                    ["OR",
                                        ["EQUAL", "$GAME.corruptionBonus", true],
                                        ["EQUAL", "$GAME.corruptionBonusDouble", true]
                                    ]
                                ],
                                ["INCREASE_VAR", "$EXPECTED_POINTS", 1]
                            ]
                        ],
                        ["EQUAL", "$LOCATION_CARD.sides.A.type", "Path"],
                        [
                            ["VAR", "$BLUE_GROUP_ID", "$GAME.groupById.$LOCATION_GROUP_ID.activeBlueGroupId"],
                            ["VAR", "$RED_GROUP_ID", "$GAME.groupById.$LOCATION_GROUP_ID.activeRedGroupId"],
                            ["VAR", "$BLUE_TOTAL", "$GAME.layout.textBoxes.$BLUE_GROUP_ID.label"],
                            ["VAR", "$RED_TOTAL", "$GAME.layout.textBoxes.$RED_GROUP_ID.label"],
                            ["INCREASE_VAR", "$EXPECTED_POINTS", ["SUBTRACT", "$RED_TOTAL", "$BLUE_TOTAL"]]
                        ]
                    ],
                    ["EQUAL", "$WINNER", "blue"],
                    ["COND",
                        ["EQUAL", "$LOCATION_CARD.sides.A.type", "Battleground"],
                        [
                            ["COND",
                                ["AND",
                                    ["EQUAL", "$LOCATION_CARD.sides.B.name", "Shadow Battleground"],
                                    ["EQUAL", "$GAME.corruptionBonusDouble", true]
                                ],
                                ["DECREASE_VAR", "$EXPECTED_POINTS", 1]
                            ]
                        ]
                    ]
                ],
                "$EXPECTED_POINTS"
            ]
        },
        "GET_EXPECTED_POINTS_BLUE": {
            "args": ["$LOCATION_GROUP_ID"],
            "code": [
                ["VAR", "$WINNER", ["GET_LOCATION_WINNER", "$LOCATION_GROUP_ID"]],
                ["VAR", "$LOCATION_CARD", "$GAME.groupById.$LOCATION_GROUP_ID.parentCards.[0]"],
                ["VAR", "$EXPECTED_POINTS", 0],
                ["COND",
                    ["EQUAL", "$WINNER", "blue"],
                    ["INCREASE_VAR", "$EXPECTED_POINTS", "$LOCATION_CARD.sides.A.victoryPoints"]
                ],
                "$EXPECTED_POINTS"
            ]
        },
        "HIGHLIGHT_CURRENT_PLAYER": {
            "args": [],
            "code": [
                ["FOR_EACH_KEY_VAL", "$PLAYER_I", "$PLAYER_I_DATA", "$PLAYER_DATA", [
                    ["UPDATE_LAYOUT", "/layout/regions/{{$PLAYER_I}}Reserve/style", null]
                ]],
                ["COND",
                    ["AND", ["EQUAL", "$GAME.currentPlayer", "player3"], ["EQUAL", "$GAME.numPlayers", 3]],
                    ["UPDATE_LAYOUT", "/layout/regions/player4Reserve/style", {"background": "rgba(0, 255, 0, 0.2)"}],
                    ["TRUE"],
                    ["UPDATE_LAYOUT", "/layout/regions/{{$GAME.currentPlayer}}Reserve/style", {"background": "rgba(0, 255, 0, 0.2)"}]
                ]
                
            ]
        },
        "UPDATE_EXPECTED_POINTS": {
            "args": [],
            "code": [
                ["VAR", "$EXPECTED_POINTS_RED", 0],
                ["VAR", "$EXPECTED_POINTS_BLUE", 0],
                ["FOR_EACH_START_STOP_STEP", "$I", 1, 7, 1, [
                    ["VAR", "$LOCATION_GROUP_ID", "sharedActiveLocation{{$I}}"],
                    ["COND",
                        ["AND", 
                            ["GREATER_THAN", ["LENGTH", "$GAME.groupById.$LOCATION_GROUP_ID.stackIds"], 0],
                            ["OR",
                                ["EQUAL", "$GAME.groupById.$LOCATION_GROUP_ID.parentCards.[0].sides.A.type", "Battleground"],
                                ["EQUAL", "$GAME.groupById.$LOCATION_GROUP_ID.parentCards.[0].sides.A.type", "Path"]
                            ]
                        ],
                        [
                            ["INCREASE_VAR", "$EXPECTED_POINTS_RED", ["GET_EXPECTED_POINTS_RED", "$LOCATION_GROUP_ID"]],
                            ["INCREASE_VAR", "$EXPECTED_POINTS_BLUE", ["GET_EXPECTED_POINTS_BLUE", "$LOCATION_GROUP_ID"]]
                        ]
                    ]
                ]],
                ["INCREASE_VAR", "$EXPECTED_POINTS_RED", "$GAME.victoryPointsRed"],
                ["INCREASE_VAR", "$EXPECTED_POINTS_BLUE", "$GAME.victoryPointsBlue"],
                ["UPDATE_LAYOUT", "/layout/textBoxes/expectedScoreRed/label", "Expected: {{$EXPECTED_POINTS_RED}}"],
                ["UPDATE_LAYOUT", "/layout/textBoxes/expectedScoreBlue/label", "Expected: {{$EXPECTED_POINTS_BLUE}}"]
            ]
        },
        "PLAY_NUMBERED_CARD_TO_RESERVE": {
            "args": ["$PLAYER_I", "$GROUP_ID", "$I"],
            "code": [
                ["VAR", "$CHOSEN_CARD", "$GAME.groupById.$GROUP_ID.parentCards.[{{$I}}]"],
                ["LOG", ["GET_ALIAS", "$PLAYER_I"], " played {{$CHOSEN_CARD.sides.A.name}} to reserve."],
                ["MOVE_CARD", "$CHOSEN_CARD.id", "{{$PLAYER_I}}Reserve", -1],
                ["CYCLE_TOP_N_CARDS", "$GROUP_ID", 4],
                ["SET", "/playerData/$PLAYER_I/browseGroup/id", null]
            ]
        },
        "CYCLE_TOP_CARD": {
            "args": ["$GROUP_ID"],
            "code": [
                ["VAR", "$ACTIVE_CARD_ID", "$GAME.groupById.$GROUP_ID.parentCardIds.[0]"],
                ["ACTION_LIST", "cycleCard"]
            ]
        },
        "CYCLE_TOP_N_CARDS": {
            "args": ["$GROUP_ID", "$N"],
            "code": [
                ["FOR_EACH_START_STOP_STEP", "$I", 0, "$N", 1, [
                    ["CYCLE_TOP_CARD", "$GROUP_ID"]
                ]]
            ]
        },
        "CYCLE_DECK": {
            "args": ["$PLAYER_I"],
            "code": [
                ["VAR", "$CYCLE_DECK_ID", "{{$PLAYER_I}}Cycled"],
                ["VAR", "$CYCLE_DECK", "$GAME.groupById.$CYCLE_DECK_ID"],
                ["LOG", ["GET_ALIAS", "$PLAYER_I"], " shuffled their cycle pile and moved it to the bottom of their deck."],
                ["SHUFFLE_GROUP", "$CYCLE_DECK_ID"],
                ["MOVE_STACKS", "$CYCLE_DECK_ID", "{{$PLAYER_I}}Deck", ["LENGTH", "$CYCLE_DECK.stackIds"], "bottom"]
            ]
        },
        "APPLY_LEADER_TOKENS": {
            "args": ["$TARGET"],
            "code": [
                ["COND", 
                    ["EQUAL", "$TARGET.sides.B.name", "Free Peoples Card"],
                    [
                        ["INCREASE_VAL", "/cardById/$TARGET.id/tokens/attackBlue", "$TARGET.sides.A.leadershipAttack"],
                        ["INCREASE_VAL", "/cardById/$TARGET.id/tokens/defenseBlue", "$TARGET.sides.A.leadershipDefense"]
                    ],
                    ["EQUAL", "$TARGET.sides.B.name", "Shadow Card"],
                    [
                        ["INCREASE_VAL", "/cardById/$TARGET.id/tokens/attackRed", "$TARGET.sides.A.leadershipAttack"],
                        ["INCREASE_VAL", "/cardById/$TARGET.id/tokens/defenseRed", "$TARGET.sides.A.leadershipDefense"]
                    ]
                ]
            ]
        },
        "LEADER_ENTERED_GROUP": {
            "args": ["$TARGET", "$GROUP_ID"],
            "code": [
                ["VAR", "$IS_SUPPORTED", false],
                ["FOR_EACH_VAL", "$CARD", "$GAME.groupById.$GROUP_ID.parentCards", [
                    ["COND",
                        ["AND",
                            ["NOT", "$IS_SUPPORTED"],
                            ["EQUAL", "$CARD.sides.A.type", "Army"],
                            ["EQUAL", "$CARD.sides.A.faction", "$TARGET.sides.A.faction"],
                            ["NOT_EQUAL", "$CARD.isSupporting", true]
                        ],
                        [
                            ["LOG", "└── {{$CARD.sides.A.name}} is now supporting {{$TARGET.sides.A.name}}."],
                            ["SET", "/cardById/$TARGET.id/isSupported", true],
                            ["SET", "/cardById/$CARD.id/isSupporting", true],
                            ["APPLY_LEADER_TOKENS", "$TARGET"],
                            ["UPDATE_VAR", "$IS_SUPPORTED", true]
                        ]
                    ]
                ]]
            ]
        },
        "ARMY_ENTERED_GROUP": {
            "args": ["$TARGET", "$GROUP_ID"],
            "code": [
                ["VAR", "$IS_SUPPORTING", false],
                ["FOR_EACH_VAL", "$CARD", "$GAME.groupById.$GROUP_ID.parentCards", [
                    ["COND",
                        ["AND",
                            ["NOT", "$IS_SUPPORTING"],
                            ["IS_LEADER", "$CARD"],
                            ["EQUAL", "$CARD.sides.A.faction", "$TARGET.sides.A.faction"],
                            ["NOT_EQUAL", "$CARD.isSupported", true]
                        ],
                        [
                            ["LOG", "└── {{$TARGET.sides.A.name}} is now supporting {{$CARD.sides.A.name}}."],
                            ["SET", "/cardById/$CARD.id/isSupported", true],
                            ["SET", "/cardById/$TARGET.id/isSupporting", true],
                            ["APPLY_LEADER_TOKENS", "$CARD"],
                            ["UPDATE_VAR", "$IS_SUPPORTING", true]
                        ]
                    ]
                ]]
            ]
        },
        "IS_LEADER": {
            "args": ["$CARD"],
            "code": ["OR", 
                ["GREATER_THAN", "$CARD.sides.A.leadershipAttack", 0],
                ["GREATER_THAN", "$CARD.sides.A.leadershipDefense", 0],
                ["EQUAL", "$CARD.sides.A.name", "Strider"]
            ]
        },
        "SET_LAYOUT_REGION_GROUP_ID": {
            "args": ["$REGION_ID", "$GROUP_ID"],
            "code": [
                ["LOG", "{{$ALIAS_N}} updated their table layout to display the {{$GROUP_ID}} pile."],
                ["SET", "/playerData/$PLAYER_N/layout/regions/{{$REGION_ID}}/groupId", "$GROUP_ID"]
            ]
        },
        "XOR": {
            "args": ["$A", "$B"],
            "code": [
                ["COND",
                    ["AND", "$A", "$B"],
                    false,
                    ["OR", "$A", "$B"],
                    true,
                    ["TRUE"],
                    false
                ]
            ]
        }
    }
}
